
#THIS CODE IS AUTO-GENERATED by timeloop_tempate, DO NOT DIRECTLY EDIT UNLESS YOU KNOW WHAT YOU ARE DOING!

from numba import njit, void, prange
import numpy as np
import math
from numpy import float64, int32, int64

@njit(nogil=True, cache=True)
def TOT_COMM(COMM_CLAWED,COMM_MILE_PAID,IC_PAID,RC_PAID):
	return COMM_CLAWED+COMM_MILE_PAID+IC_PAID+RC_PAID


@njit(nogil=True, parallel=True, cache=True)
def wrapped_TOT_COMM(COMM_CLAWED,COMM_MILE_PAID,IC_PAID,RC_PAID):
	arr_TOT_COMM=np.zeros(COMM_CLAWED.shape,dtype=float64)
	for y in prange(COMM_CLAWED.shape[0]):
		for t in range(COMM_CLAWED.shape[1]):
			arr_TOT_COMM[y,t]=TOT_COMM(COMM_CLAWED[y,t],COMM_MILE_PAID[y,t],IC_PAID[y,t],RC_PAID[y,t])
	return arr_TOT_COMM
