
#THIS CODE IS AUTO-GENERATED by timeloop_tempate, DO NOT DIRECTLY EDIT UNLESS YOU KNOW WHAT YOU ARE DOING!

from numba import njit, void, prange
import numpy as np
import math
from numpy import float64, int32, int64

@njit(nogil=True, cache=True)
def BASE_DECREMENT_WOP_RATE(WOP_RATE_BE, POL_YR, REN_POL_TERM_Y, ANN_TERM_Y, DEC_WOP_CODE):
	if DEC_WOP_CODE==999999:
		return 0
	elif POL_YR>(REN_POL_TERM_Y+ANN_TERM_Y):
		return 0
	else:
		return WOP_RATE_BE


@njit(nogil=True, parallel=True, cache=True)
def wrapped_BASE_DECREMENT_WOP_RATE(WOP_RATE_BE,POL_YR,REN_POL_TERM_Y,ANN_TERM_Y,DEC_WOP_CODE):
	arr_BASE_DECREMENT_WOP_RATE=np.zeros(WOP_RATE_BE.shape,dtype=float64)
	for y in prange(WOP_RATE_BE.shape[0]):
		for t in range(WOP_RATE_BE.shape[1]):
			arr_BASE_DECREMENT_WOP_RATE[y,t]=BASE_DECREMENT_WOP_RATE(WOP_RATE_BE[y,t],POL_YR[y,t],REN_POL_TERM_Y[y,0],ANN_TERM_Y[y,0],DEC_WOP_CODE[y,0])
	return arr_BASE_DECREMENT_WOP_RATE
