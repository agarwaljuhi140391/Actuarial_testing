
#THIS CODE IS AUTO-GENERATED by timeloop_tempate, DO NOT DIRECTLY EDIT UNLESS YOU KNOW WHAT YOU ARE DOING!

from numba import njit, void, prange
import numpy as np
import math
from numpy import float64, int32, int64

@njit(nogil=True, cache=True)
def DECREMENT_WOP_RATES_ANNUAL(T, DURATIONIF_M, WP_RIDER_IND, DEC_WOP_IND, BASE_DECREMENT_WOP_RATE, DECREMENT_WOP_EXPERIENCE, DEC_WOP_PAD_PC):
	if T<=DURATIONIF_M:
		return 0
	else:
		if (WP_RIDER_IND==0) and (DEC_WOP_IND==0):
			return 0
		else:
			return BASE_DECREMENT_WOP_RATE * DECREMENT_WOP_EXPERIENCE * (1+DEC_WOP_PAD_PC)


@njit(nogil=True, parallel=True, cache=True)
def wrapped_DECREMENT_WOP_RATES_ANNUAL(T,DURATIONIF_M,WP_RIDER_IND,DEC_WOP_IND,BASE_DECREMENT_WOP_RATE,DECREMENT_WOP_EXPERIENCE,DEC_WOP_PAD_PC):
	arr_DECREMENT_WOP_RATES_ANNUAL=np.zeros(T.shape,dtype=float64)
	for y in prange(T.shape[0]):
		for t in range(T.shape[1]):
			arr_DECREMENT_WOP_RATES_ANNUAL[y,t]=DECREMENT_WOP_RATES_ANNUAL(T[y,t],DURATIONIF_M[y,0],WP_RIDER_IND[y,0],DEC_WOP_IND[y,0],BASE_DECREMENT_WOP_RATE[y,t],DECREMENT_WOP_EXPERIENCE[y,t],DEC_WOP_PAD_PC[0,0])
	return arr_DECREMENT_WOP_RATES_ANNUAL
