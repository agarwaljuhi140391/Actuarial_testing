
#THIS CODE IS AUTO-GENERATED by timeloop_tempate, DO NOT DIRECTLY EDIT UNLESS YOU KNOW WHAT YOU ARE DOING!

from numba import njit, void, prange
import numpy as np
import math
from numpy import float64, int32, int64

@njit(nogil=True, cache=True)
def POL_MTH(T,POL_YR):
	return T-(POL_YR-1)*12


@njit(nogil=True, parallel=True, cache=True)
def wrapped_POL_MTH(T,POL_YR):
	arr_POL_MTH=np.zeros(T.shape,dtype=int32)
	for y in prange(T.shape[0]):
		for t in range(T.shape[1]):
			arr_POL_MTH[y,t]=POL_MTH(T[y,t],POL_YR[y,t])
	return arr_POL_MTH
