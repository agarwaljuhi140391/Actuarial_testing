
#THIS CODE IS AUTO-GENERATED by timeloop_tempate, DO NOT DIRECTLY EDIT UNLESS YOU KNOW WHAT YOU ARE DOING!

from numba import njit, void, prange
import numpy as np
import math
from numpy import float64, int32, int64

@njit(nogil=True, cache=True)
def ANN_PREM_PP(PROD_CODE, PREM_STEP_DUR, POL_YR, PREM_STEP_RATIO):
#	this is fake code to avoid commutation
	if PROD_CODE==1221:
		fake_annual_prem=0.1122
	elif PROD_CODE==1212:
		fake_annual_prem=0.177588
	elif PROD_CODE==1211:
		fake_annual_prem=2.444875
	elif PROD_CODE==1207:
		fake_annual_prem=0.017688
	else:
		fake_annual_prem=0
	if (POL_YR>PREM_STEP_DUR) and (PREM_STEP_RATIO!=0):
		return fake_annual_prem
	else:
		return fake_annual_prem


@njit(nogil=True, parallel=True, cache=True)
def wrapped_ANN_PREM_PP(PROD_CODE,PREM_STEP_DUR,POL_YR,PREM_STEP_RATIO):
	arr_ANN_PREM_PP=np.zeros(POL_YR.shape,dtype=float64)
	for y in prange(POL_YR.shape[0]):
		for t in range(POL_YR.shape[1]):
			arr_ANN_PREM_PP[y,t]=ANN_PREM_PP(PROD_CODE[y,0],PREM_STEP_DUR[y,0],POL_YR[y,t],PREM_STEP_RATIO[y,0])
	return arr_ANN_PREM_PP
