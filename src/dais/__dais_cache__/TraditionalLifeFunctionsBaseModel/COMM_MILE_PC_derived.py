
#THIS CODE IS AUTO-GENERATED by simple_template, DO NOT DIRECTLY EDIT UNLESS YOU KNOW WHAT YOU ARE DOING!

from numba import njit, void, prange
import numpy as np
import math
from numpy import float64, int32, int64

@njit(nogil=True, cache=True)
def COMM_MILE_PC_derived(COMM_MILE_PC,COMM_MILE_PC_IND,AG_SYS_CODE):
	if (AG_SYS_CODE != 1) or (COMM_MILE_PC_IND != 1):
		return 0
	else:
		return COMM_MILE_PC


@njit(nogil=True, parallel=True, cache=True)
def wrapped_COMM_MILE_PC_derived(COMM_MILE_PC,COMM_MILE_PC_IND,AG_SYS_CODE):
	arr_COMM_MILE_PC_derived=np.zeros((COMM_MILE_PC.shape[0],1),dtype=float64)
	for y in prange(COMM_MILE_PC.shape[0]):
		arr_COMM_MILE_PC_derived[y,0]=COMM_MILE_PC_derived(COMM_MILE_PC[y,0],COMM_MILE_PC_IND[y,0],AG_SYS_CODE[y,0])
	return arr_COMM_MILE_PC_derived
