
#THIS CODE IS AUTO-GENERATED by simple_template, DO NOT DIRECTLY EDIT UNLESS YOU KNOW WHAT YOU ARE DOING!

from numba import njit, void, prange
import numpy as np
import math
from numpy import float64, int32, int64

@njit(nogil=True, cache=True)
def IC_ADD_BASE_PC_derived(IC_ADD_BASE_IND,AG_SYS_CODE,IC_ADD_BASE_PC):
	if (IC_ADD_BASE_IND==0) or (AG_SYS_CODE != 2):
		return 0
	else:
		return IC_ADD_BASE_PC


@njit(nogil=True, parallel=True, cache=True)
def wrapped_IC_ADD_BASE_PC_derived(IC_ADD_BASE_IND,AG_SYS_CODE,IC_ADD_BASE_PC):
	arr_IC_ADD_BASE_PC_derived=np.zeros((IC_ADD_BASE_IND.shape[0],1),dtype=float64)
	for y in prange(IC_ADD_BASE_IND.shape[0]):
		arr_IC_ADD_BASE_PC_derived[y,0]=IC_ADD_BASE_PC_derived(IC_ADD_BASE_IND[y,0],AG_SYS_CODE[y,0],IC_ADD_BASE_PC[y,0])
	return arr_IC_ADD_BASE_PC_derived
