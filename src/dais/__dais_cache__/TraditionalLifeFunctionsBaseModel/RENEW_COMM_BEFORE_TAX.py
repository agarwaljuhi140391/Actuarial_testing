
#THIS CODE IS AUTO-GENERATED by timeloop_tempate, DO NOT DIRECTLY EDIT UNLESS YOU KNOW WHAT YOU ARE DOING!

from numba import njit, void, prange
import numpy as np
import math
from numpy import float64, int32, int64

@njit(nogil=True, cache=True)
def RENEW_COMM_BEFORE_TAX(RC_BASE_PAYBL_PP,COMM_CAP,COMM_PAY_ADJ):
	return min(RC_BASE_PAYBL_PP,COMM_CAP) * COMM_PAY_ADJ


@njit(nogil=True, parallel=True, cache=True)
def wrapped_RENEW_COMM_BEFORE_TAX(RC_BASE_PAYBL_PP,COMM_CAP,COMM_PAY_ADJ):
	arr_RENEW_COMM_BEFORE_TAX=np.zeros(RC_BASE_PAYBL_PP.shape,dtype=float64)
	for y in prange(RC_BASE_PAYBL_PP.shape[0]):
		for t in range(RC_BASE_PAYBL_PP.shape[1]):
			arr_RENEW_COMM_BEFORE_TAX[y,t]=RENEW_COMM_BEFORE_TAX(RC_BASE_PAYBL_PP[y,t],COMM_CAP[y,t],COMM_PAY_ADJ[y,t])
	return arr_RENEW_COMM_BEFORE_TAX
