
#THIS CODE IS AUTO-GENERATED by timeloop_tempate, DO NOT DIRECTLY EDIT UNLESS YOU KNOW WHAT YOU ARE DOING!

from numba import njit, void, prange
import numpy as np
import math
from numpy import float64, int32, int64

@njit(nogil=True, cache=True)
def DEATH_RATE_ANNUAL(BASE_DEATH_RATES, MORTALITY_SELECTION_FACTOR, SUBS_PC, T, MORT_PAD_PC, DURATIONIF_M):
	if T<=DURATIONIF_M:
		return 0
	else:
		return BASE_DEATH_RATES*MORTALITY_SELECTION_FACTOR*SUBS_PC*(1+MORT_PAD_PC/100)/100


@njit(nogil=True, parallel=True, cache=True)
def wrapped_DEATH_RATE_ANNUAL(BASE_DEATH_RATES,MORTALITY_SELECTION_FACTOR,SUBS_PC,T,MORT_PAD_PC,DURATIONIF_M):
	arr_DEATH_RATE_ANNUAL=np.zeros(BASE_DEATH_RATES.shape,dtype=float64)
	for y in prange(BASE_DEATH_RATES.shape[0]):
		for t in range(BASE_DEATH_RATES.shape[1]):
			arr_DEATH_RATE_ANNUAL[y,t]=DEATH_RATE_ANNUAL(BASE_DEATH_RATES[y,t],MORTALITY_SELECTION_FACTOR[y,t],SUBS_PC[y,0],T[y,t],MORT_PAD_PC[0,0],DURATIONIF_M[y,0])
	return arr_DEATH_RATE_ANNUAL
