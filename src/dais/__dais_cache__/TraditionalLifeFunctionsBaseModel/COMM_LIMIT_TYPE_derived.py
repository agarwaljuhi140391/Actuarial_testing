
#THIS CODE IS AUTO-GENERATED by simple_template, DO NOT DIRECTLY EDIT UNLESS YOU KNOW WHAT YOU ARE DOING!

from numba import njit, void, prange
import numpy as np
import math
from numpy import float64, int32, int64

@njit(nogil=True, cache=True)
def COMM_LIMIT_TYPE_derived(COMM_LIMIT_TYPE,COMM_ID,MIN_COMM_ID):
	if COMM_ID<MIN_COMM_ID:
		return 999999
	else:
		return COMM_LIMIT_TYPE


@njit(nogil=True, parallel=True, cache=True)
def wrapped_COMM_LIMIT_TYPE_derived(COMM_LIMIT_TYPE,COMM_ID,MIN_COMM_ID):
	arr_COMM_LIMIT_TYPE_derived=np.zeros((COMM_LIMIT_TYPE.shape[0],1),dtype=float64)
	for y in prange(COMM_LIMIT_TYPE.shape[0]):
		arr_COMM_LIMIT_TYPE_derived[y,0]=COMM_LIMIT_TYPE_derived(COMM_LIMIT_TYPE[y,0],COMM_ID[y,0],MIN_COMM_ID[0,0])
	return arr_COMM_LIMIT_TYPE_derived
