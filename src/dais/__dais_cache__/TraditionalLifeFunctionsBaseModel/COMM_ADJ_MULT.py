
#THIS CODE IS AUTO-GENERATED by simple_template, DO NOT DIRECTLY EDIT UNLESS YOU KNOW WHAT YOU ARE DOING!

from numba import njit, void, prange
import numpy as np
import math
from numpy import float64, int32, int64

@njit(nogil=True, cache=True)
def COMM_ADJ_MULT(COMM_ADJ_MULT_TYPE,POL_TERM_Y,PREM_PAYBL_Y):
	if COMM_ADJ_MULT_TYPE==1:
		if POL_TERM_Y==0:
			return -1 #Error scenario
		else:
			return PREM_PAYBL_Y / POL_TERM_Y
	else:
		return 1


@njit(nogil=True, parallel=True, cache=True)
def wrapped_COMM_ADJ_MULT(COMM_ADJ_MULT_TYPE,POL_TERM_Y,PREM_PAYBL_Y):
	arr_COMM_ADJ_MULT=np.zeros((COMM_ADJ_MULT_TYPE.shape[0],1),dtype=float64)
	for y in prange(COMM_ADJ_MULT_TYPE.shape[0]):
		arr_COMM_ADJ_MULT[y,0]=COMM_ADJ_MULT(COMM_ADJ_MULT_TYPE[y,0],POL_TERM_Y[y,0],PREM_PAYBL_Y[y,0])
	return arr_COMM_ADJ_MULT
