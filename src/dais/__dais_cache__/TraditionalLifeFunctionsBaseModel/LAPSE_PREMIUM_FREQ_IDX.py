
#THIS CODE IS AUTO-GENERATED by simple_template, DO NOT DIRECTLY EDIT UNLESS YOU KNOW WHAT YOU ARE DOING!

from numba import njit, void, prange
import numpy as np
import math
from numpy import float64, int32, int64

@njit(nogil=True, cache=True)
def LAPSE_PREMIUM_FREQ_IDX(PREM_FREQ,LAPSE_PREM_FREQ_IND):
	if LAPSE_PREM_FREQ_IND==0:
		return 999999
	else:
		return PREM_FREQ


@njit(nogil=True, parallel=True, cache=True)
def wrapped_LAPSE_PREMIUM_FREQ_IDX(PREM_FREQ,LAPSE_PREM_FREQ_IND):
	arr_LAPSE_PREMIUM_FREQ_IDX=np.zeros((PREM_FREQ.shape[0],1),dtype=int64)
	for y in prange(PREM_FREQ.shape[0]):
		arr_LAPSE_PREMIUM_FREQ_IDX[y,0]=LAPSE_PREMIUM_FREQ_IDX(PREM_FREQ[y,0],LAPSE_PREM_FREQ_IND[y,0])
	return arr_LAPSE_PREMIUM_FREQ_IDX
