
#THIS CODE IS AUTO-GENERATED by timeloop_tempate, DO NOT DIRECTLY EDIT UNLESS YOU KNOW WHAT YOU ARE DOING!

from numba import njit, void, prange
import numpy as np
import math
from numpy import float64, int32, int64

@njit(nogil=True, cache=True)
def SPIKE_ADJUSTED_LAPSE_RATE(SPIKE_LAPSE_PERIOD2,LAPSE_SPIKE_RATE,REMAINING_PREMIUM_TERM,SPIKE_RATE_IND,POL_YR,REN_POL_TERM_Y,DOWN_PAYMENT,RENEWAL_COUNT,BASE_LAPSE_RATES):
	#Bug in down_payment in the excel
	if (SPIKE_RATE_IND==0) or (POL_YR>REN_POL_TERM_Y) or ((DOWN_PAYMENT==1) and (RENEWAL_COUNT==0)):
		return BASE_LAPSE_RATES
	else:
		if REMAINING_PREMIUM_TERM==-1:
			return LAPSE_SPIKE_RATE
		else:
			if (REMAINING_PREMIUM_TERM<SPIKE_LAPSE_PERIOD2) and (REMAINING_PREMIUM_TERM>-1):
				if SPIKE_LAPSE_PERIOD2 !=0:
					return BASE_LAPSE_RATES-(BASE_LAPSE_RATES-LAPSE_SPIKE_RATE)*(1-REMAINING_PREMIUM_TERM/SPIKE_LAPSE_PERIOD2)
				else:
					return BASE_LAPSE_RATES
			else:
				return BASE_LAPSE_RATES


@njit(nogil=True, parallel=True, cache=True)
def wrapped_SPIKE_ADJUSTED_LAPSE_RATE(SPIKE_LAPSE_PERIOD2,LAPSE_SPIKE_RATE,REMAINING_PREMIUM_TERM,SPIKE_RATE_IND,POL_YR,REN_POL_TERM_Y,DOWN_PAYMENT,RENEWAL_COUNT,BASE_LAPSE_RATES):
	arr_SPIKE_ADJUSTED_LAPSE_RATE=np.zeros(LAPSE_SPIKE_RATE.shape,dtype=float64)
	for y in prange(LAPSE_SPIKE_RATE.shape[0]):
		for t in range(LAPSE_SPIKE_RATE.shape[1]):
			arr_SPIKE_ADJUSTED_LAPSE_RATE[y,t]=SPIKE_ADJUSTED_LAPSE_RATE(SPIKE_LAPSE_PERIOD2[y,0],LAPSE_SPIKE_RATE[y,t],REMAINING_PREMIUM_TERM[y,t],SPIKE_RATE_IND[y,0],POL_YR[y,t],REN_POL_TERM_Y[y,0],DOWN_PAYMENT[y,0],RENEWAL_COUNT[y,0],BASE_LAPSE_RATES[y,t])
	return arr_SPIKE_ADJUSTED_LAPSE_RATE
