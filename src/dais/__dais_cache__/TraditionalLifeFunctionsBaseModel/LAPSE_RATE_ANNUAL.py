
#THIS CODE IS AUTO-GENERATED by timeloop_tempate, DO NOT DIRECTLY EDIT UNLESS YOU KNOW WHAT YOU ARE DOING!

from numba import njit, void, prange
import numpy as np
import math
from numpy import float64, int32, int64

@njit(nogil=True, cache=True)
def LAPSE_RATE_ANNUAL(T,DURATIONIF_M,SPIKE_ADJUSTED_LAPSE_RATE, LAPSE_PAD_PC):
	if T<=DURATIONIF_M:
		return 0
	else:
		return SPIKE_ADJUSTED_LAPSE_RATE * (1 + LAPSE_PAD_PC/100)


@njit(nogil=True, parallel=True, cache=True)
def wrapped_LAPSE_RATE_ANNUAL(T,DURATIONIF_M,SPIKE_ADJUSTED_LAPSE_RATE,LAPSE_PAD_PC):
	arr_LAPSE_RATE_ANNUAL=np.zeros(T.shape,dtype=float64)
	for y in prange(T.shape[0]):
		for t in range(T.shape[1]):
			arr_LAPSE_RATE_ANNUAL[y,t]=LAPSE_RATE_ANNUAL(T[y,t],DURATIONIF_M[y,0],SPIKE_ADJUSTED_LAPSE_RATE[y,t],LAPSE_PAD_PC[y,0])
	return arr_LAPSE_RATE_ANNUAL
