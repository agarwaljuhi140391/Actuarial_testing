
#THIS CODE IS AUTO-GENERATED by timeloop_tempate, DO NOT DIRECTLY EDIT UNLESS YOU KNOW WHAT YOU ARE DOING!

from numba import njit, void, prange
import numpy as np
import math
from numpy import float64, int32, int64

@njit(nogil=True, cache=True)
def COMM_RATE_ADJ_PC(POL_YR,CP_TYPE_patch,COMM_ID,COMM_RATE_BEFORE_ROUND):
	if (((POL_YR==1) and (CP_TYPE_patch==1)) or (CP_TYPE_patch==2)) and COMM_ID<=5:
		# return round(COMM_RATE_BEFORE_ROUND,1)
		return math.floor(COMM_RATE_BEFORE_ROUND*10)/10
	else:
		return COMM_RATE_BEFORE_ROUND


@njit(nogil=True, parallel=True, cache=True)
def wrapped_COMM_RATE_ADJ_PC(POL_YR,CP_TYPE_patch,COMM_ID,COMM_RATE_BEFORE_ROUND):
	arr_COMM_RATE_ADJ_PC=np.zeros(POL_YR.shape,dtype=float64)
	for y in prange(POL_YR.shape[0]):
		for t in range(POL_YR.shape[1]):
			arr_COMM_RATE_ADJ_PC[y,t]=COMM_RATE_ADJ_PC(POL_YR[y,t],CP_TYPE_patch[y,0],COMM_ID[y,0],COMM_RATE_BEFORE_ROUND[y,t])
	return arr_COMM_RATE_ADJ_PC
