
#THIS CODE IS AUTO-GENERATED by complex_template, DO NOT DIRECTLY EDIT UNLESS YOU KNOW WHAT YOU ARE DOING!

from numba import njit, void, prange
import numpy as np
import math
from numpy import float64, int32, int64
from dais.models.simple_dispatcher import irr_est

@njit(nogil=True, cache=True)
def COMM_MILAGE_BEFORE_TAX(COMM_MILAGE_RATE,T,REN_POL_TERM_Y,ANN_TERM_Y,REN_T,MAX_COMM_MILE_M,POL_TERM_Y,CP_TYPE_patch
		,IC_BASE_PAYBL_PP,COMM_CAP,IC_INCT_PAYBL_PP,PREM_FREQ,COMM_MILE_FAC,COMM_MILAGE_BEFORE_TAX):
	for t in range(T.shape[0]):
		if (T[t]>(REN_POL_TERM_Y[0]+ANN_TERM_Y[0])*12) or (REN_T[t]>min(MAX_COMM_MILE_M[0],POL_TERM_Y[0]*12)):
			COMM_MILAGE_BEFORE_TAX[t] = 0
		else:
			if REN_T[t]==1:
				if min(MAX_COMM_MILE_M[0],POL_TERM_Y[t])==0:
					COMM_MILAGE_BEFORE_TAX[t]=0
				else:
					COMM_MILAGE_BEFORE_TAX[t] = (min(IC_BASE_PAYBL_PP[t],COMM_CAP[t])-IC_INCT_PAYBL_PP[t])*(
					PREM_FREQ[0]**(2 if CP_TYPE_patch[0]==0 else 1)
					)*COMM_MILAGE_RATE[t]*COMM_MILE_FAC[0]/(min(MAX_COMM_MILE_M[0],POL_TERM_Y[t]*12))
			else:
				COMM_MILAGE_BEFORE_TAX[t]=COMM_MILAGE_BEFORE_TAX[t-1]


@njit(nogil=True, parallel=True, cache=True)
def wrapped_COMM_MILAGE_BEFORE_TAX(COMM_MILAGE_RATE,T,REN_POL_TERM_Y,ANN_TERM_Y,REN_T,MAX_COMM_MILE_M,POL_TERM_Y,CP_TYPE_patch,IC_BASE_PAYBL_PP,COMM_CAP,IC_INCT_PAYBL_PP,PREM_FREQ,COMM_MILE_FAC):
	arr_COMM_MILAGE_BEFORE_TAX=np.zeros((COMM_MILAGE_RATE.shape[0],COMM_MILAGE_RATE.shape[1]),dtype=float64)
	for y in prange(arr_COMM_MILAGE_BEFORE_TAX.shape[0]):
		COMM_MILAGE_BEFORE_TAX(COMM_MILAGE_RATE[y,:],T[y,:],REN_POL_TERM_Y[y,:],ANN_TERM_Y[y,:],REN_T[y,:],MAX_COMM_MILE_M[y,:],POL_TERM_Y[y,:],CP_TYPE_patch[y,:],IC_BASE_PAYBL_PP[y,:],COMM_CAP[y,:],IC_INCT_PAYBL_PP[y,:],PREM_FREQ[y,:],COMM_MILE_FAC[y,:],arr_COMM_MILAGE_BEFORE_TAX[y,:])
	return arr_COMM_MILAGE_BEFORE_TAX
